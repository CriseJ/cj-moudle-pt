//判断是要使用application插件，还是Library插件
if (isMoudle.toBoolean()){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 27
    //解决各个组件之间资源名冲突的问题
    resourcePrefix 'threemoudle'
    defaultConfig {
        if (isMoudle.toBoolean()){
            applicationId "cj_pt.crise.com.three_moudle"
        }
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 解决AndroidManifest.xml在Debug和Release模式下的使用问题，其中isModle值的添加和修改是在项目的gradle.properties文件中
    sourceSets{
        main{
            if (isMoudle.toBoolean()){
                manifest.srcFile 'src/main/moudle/AndroidManifest.xml'
            }else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java{
                    exclude 'debug/**'
                }
            }
        }
    }

    //  因为我把拦截器等公用类在base注册，在编译期间生成路径映射。同时也需要在build中加入
    defaultConfig{
        javaCompileOptions{
            annotationProcessorOptions{
                arguments = [moudleName: project.getName()]
            }
        }
    }



}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    implementation project(':base-library')
}
